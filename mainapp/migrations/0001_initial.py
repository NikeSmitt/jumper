# Generated by Django 4.1.4 on 2023-02-11 07:24

from django.db import migrations, models
import django.db.models.deletion
import mainapp.models.product_image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название бренда')),
                ('description', models.TextField(verbose_name='Описание бренда')),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='название категории')),
                ('slug', models.SlugField()),
                ('head_image', models.ImageField(default='defaults/category/cat_head_image_default.jpeg', help_text='Размер 1350х550', upload_to='categories', verbose_name='Изображение в заголовке при выборе категории')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='mainapp.category')),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название цвета')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название товара')),
                ('code', models.CharField(blank=True, db_index=True, max_length=30, null=True, verbose_name='Артикул')),
                ('shirt_slogan', models.CharField(blank=True, max_length=200, null=True, verbose_name='Короткое описание')),
                ('gender', models.CharField(choices=[('М', 'Мужское'), ('Ж', 'Женское')], max_length=1, verbose_name='Пол')),
                ('slug', models.SlugField()),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
                ('deleted', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('manufacture', models.CharField(blank=True, max_length=50, null=True, verbose_name='Производство')),
                ('price', models.FloatField(default=0.0, verbose_name='Цена')),
                ('discount', models.SmallIntegerField(default=0, verbose_name='Скидка')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('top_selling', models.BooleanField(default=False, help_text='Вывод товара на главную страницу в разделе лучшие продажи', verbose_name='Топовые товары')),
                ('index_page_image', models.ImageField(blank=True, help_text='Размер изображения 1450х750', null=True, upload_to='main_page_images', verbose_name='Картинка на заглавной странице')),
                ('main_page_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Заголовок товара на главной странице')),
                ('main_page_subtitle', models.CharField(blank=True, max_length=100, null=True, verbose_name='Подзаголовок товара на главной странице')),
                ('shown_on_main', models.BooleanField(default=False, help_text='Проверить наличие соответсвующий картинки', verbose_name='Показывать на главной странице')),
                ('additional_product_image', models.ImageField(blank=True, help_text='1200x800 - Изображение для отображения товара как дополнительного в центре заглавной страницы', null=True, upload_to='main_page_images/additional', verbose_name='Дополнительное изображение')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='mainapp.brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='mainapp.category')),
                ('colors', models.ManyToManyField(blank=True, related_name='products', to='mainapp.color')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, unique=True)),
                ('tag', models.SlugField(unique=True)),
                ('image', models.ImageField(help_text='600x400', null=True, upload_to='tags')),
                ('head_image', models.ImageField(default='cat_head_image_default.jpeg', help_text='Размер 1350х550', upload_to='categories', verbose_name='Изображение в заголовке при выборе категории')),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('label_shoes', models.CharField(blank=True, choices=[('rus', 'RUS'), ('uk', 'UK'), ('us', 'US'), ('eur', 'EUR'), ('sm', 'SM')], max_length=3, null=True, verbose_name='Система размера обуви')),
                ('label_clothes', models.CharField(blank=True, choices=[('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large'), ('XXL', '2 Extra Large')], max_length=3, null=True, verbose_name='Система размера одежды')),
                ('value', models.FloatField(blank=True, null=True, verbose_name='Значение')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sizes', to='mainapp.product')),
            ],
            options={
                'ordering': ['product'],
            },
        ),
        migrations.CreateModel(
            name='ProductSpec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название спецификации')),
                ('value', models.CharField(max_length=100, verbose_name='Значение спецификации')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spec', to='mainapp.product')),
            ],
            options={
                'verbose_name': 'Спецификация',
                'verbose_name_plural': 'Спецификации',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=mainapp.models.product_image.img_dir)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mainapp.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='products', to='mainapp.tag'),
        ),
        migrations.AddConstraint(
            model_name='size',
            constraint=models.CheckConstraint(check=models.Q(('label_clothes__isnull', False), ('label_shoes__isnull', False), _negated=True), name='Нельзя использовать сразу несколько систем размеров'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('slug', 'parent')},
        ),
    ]
